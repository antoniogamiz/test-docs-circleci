
=begin pod :kind("type") :subkind("class") :category("basic")

=TITLE class Perl6::Documentable::Secondary

=SUBTITLE Represents a self-contained Perl 6 documentation element.

    class Perl6::Documentable::Secondary is Perl6::Documentable {}

An instance of this object is used to represent a fragment of documentation
found in a C<Perl6::Documentable::Primary> object. What parts are considered a
C<Perl6::Documentable::Secondary> object? See
L<find-definitions|/type/Perl6::Documentable::Primary#method_find-definitions>.

=head1 Methods

=head2 method origin

Defined as

    method origin(--> Perl6::Documentable::Primary)

Returns the L<Perl6::Documentable::Primary|/type/Perl6::Documentable::Primary> object where
this documentation fragment was found.

=head2 method url

Defined as

    method url

Returns the URL of its associated HTML file. For instance, if we have a routine (that means,
C<$.kind> equal to C<Kind::Routine>), whose name is C<fff>, then it will return C</routine/fff>.

=head2 method url-in-origin

Defined as
newdef
    method url-in-origin

Returns a URL pointing to the HTML file associated to B<its origin>, with an additional fragment
pointing to the exact part where the secondary pod was found.

For instance, if this C<Perl6::Documentable::Secondary> object was created using a C<=head2 method new>
subpod, found in a bigger pod, C<Any.pod6>, this method will return C</type/Any#method_new>.

=head2 method new

Defined as

    method new(:$kind!, :$name!, :@subkinds, :@categories, :$pod!, :$origin)

Creates a new C<Perl6::Documentable::Secondary> object. You should not create your own instances of
this class. Instead of that, you should rely on L<Perl6::Documentable::Primary|/type/Perl6::Documentable::Primary>
and use its C<@.defs> attribute.

The C<$pod> object is "normalized" when you use this method. That means, its title is modified and
headings level are rewritten to avoid style problems.

=end pod