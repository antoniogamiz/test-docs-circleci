
=begin pod :kind("type") :subkind("class") :category("basic")

=TITLE class Perl6::Documentable::Index

=SUBTITLE Reference container

    class Perl6::Documentable::Index is Perl6::Documentable

Used to represent and handle the C<"X<>"> elements found in a pod.

=head1 Methods

=head2 method origin

Defined as

    method origin(--> Perl6::Documentable::Primary)

Returns the L<Perl6::Documentable::Primary|/type/Perl6::Documentable::Primary> object where the
reference was found.

=head2 method meta

Defined as

    method meta(--> Array[Str])

Returns the meta part corresponding to the reference.

You need to have in mind how the meta part is parsed. Given the following reference element:

=begin pod

X<content part|a1,a2;b1,b2>

=end pod

The resulting meta part would be:

=begin code
say $that-reference.meta # OUTPUT: [["a1","a2"],["b1", "b2"]]
=end code

So C<,> is a first-level separator, and C<;> is a second-level separator.

A C<Perl6::Documentable::Index> object is created by B<each second-level element found>.
So, in the previous case, two different objects would have been created (one using C<["a1", "a2"]> and
the other using C<["b1", "b2"]>).

=head2 method new

Defined as

    method new(:$pod!, :@meta!, :$origin!)

=item1 C<$pod>: "X<>" object.
=item1 C<@meta>: second-level separator associated to this object.
=item1 C<$origin>: L<Perl6::Documentable::Primary|/type/Perl6::Documentable::Primary> object where this reference was found.
=item1 C<$mame> is assigned following the content of C<@meta>:
=item2 If C<@meta> is equal to C<["a", "b", "c"]>, then C<$name> will be set to C<"c (a b)">.
=item2 If C<@meta> is equal to C<["a"]>, then C<$name> will be set to C<"a">.
=item1 C<$kind> will always be set to C<Kind::Reference>.

=head2 method url

Defined as

    method url(--> Str)

Returns the URL assigned to this reference.

=end pod
